<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>回风舞雪</title>
    <link>https://huifeng.me/</link>
    <description>Recent content on 回风舞雪</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 24 Aug 2020 15:11:20 +0800</lastBuildDate>
    
	<atom:link href="https://huifeng.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>强网杯CTF 2020 区块链题目 IPFS Writeup</title>
      <link>https://huifeng.me/posts/qwbctfwriteupofipfs/</link>
      <pubDate>Mon, 24 Aug 2020 15:11:20 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/qwbctfwriteupofipfs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>gopl.io chapter 9 memo5 study</title>
      <link>https://huifeng.me/posts/goplchapter9memo5/</link>
      <pubDate>Mon, 17 Aug 2020 19:35:01 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/goplchapter9memo5/</guid>
      <description>&amp;ldquo;The Go Programming Language&amp;rdquo; 《Go 语言圣经》 第九章 memo5.go 那道例题，困扰了我很久，我承认我理解能力，对Go的掌握程度都没达到我的预期，简单点说，我没我想的那么聪慧。所以我只好花了快5天时间，去理解这个例题，最后，我终于能把每行</description>
    </item>
    
    <item>
      <title>Concurrency In Go Study</title>
      <link>https://huifeng.me/posts/concurrencyingostudy/</link>
      <pubDate>Tue, 11 Aug 2020 00:52:42 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/concurrencyingostudy/</guid>
      <description>&lt;p&gt;Go 的并发很核心，理解不难，听懂也简单，但是用好它，很难！至少我现在觉得这东西好绕，当然这也说明我们没有学透彻，学明白，下面把学到的一些东西记录下来。算是二次理解。&lt;br&gt;
Concurrency is go programing is a core tech, easy to understand but hard to use in best practices.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Clone Hugo To Other Desktop</title>
      <link>https://huifeng.me/posts/clonehugotootherdesktop/</link>
      <pubDate>Thu, 30 Jul 2020 19:36:42 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/clonehugotootherdesktop/</guid>
      <description>&lt;p&gt;First of all, I will never use coding.net or gitee for my blog repos deploy, they are not confortable to me, so sad, so bad.&lt;/p&gt;
&lt;p&gt;My hugo have three repos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;hugo(hugo resource, private repo) - root&lt;/li&gt;
&lt;li&gt;zozo(theme/zozo, private repo) - submodule&lt;/li&gt;
&lt;li&gt;public(html files, public repo) - submodule&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Maybe, you have this structure too.&lt;br&gt;
I clone my repo &lt;code&gt;hugo&lt;/code&gt; to my other desktop, but &lt;code&gt;theme&lt;/code&gt; and &lt;code&gt;public&lt;/code&gt; folders are blank.&lt;br&gt;
Now, fix it!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git Tips</title>
      <link>https://huifeng.me/posts/gittips/</link>
      <pubDate>Sun, 26 Jul 2020 20:08:36 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/gittips/</guid>
      <description>&lt;h1 id=&#34;-constantly&#34;&gt;# Constantly&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;# git remote add
git remote add origin https://e.coding.net/wedojava/hugo/zozo.git
# git remote 重新设置
git remote set-url origin https://e.coding.net/wedojava/hugo/zozo.git
git push -u origin master
git clone https://github.com/varkai/hugo-theme-zozo themes/zozo
git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke
git submodule add -b master https://gitee.com/wedojava/wedojava.git public
git config --global user.email &amp;#34;wedojava@gmail.com&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Hexo转到hugo，有些经验和脚本希望能帮到大家</title>
      <link>https://huifeng.me/posts/hexo2hugo/</link>
      <pubDate>Sun, 26 Jul 2020 18:15:55 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/hexo2hugo/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;干货：从hexo转到hugo写了个python3的脚本: &lt;a href=&#34;https://gist.github.com/wedojava/aab3a975858fbbbab4e0b3300ad7e1c8&#34;&gt;migrate hexo to hugo&lt;/a&gt;，毕竟快一年没用Python了，如果有问题欢迎骚扰.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更多参考：https://gohugo.io/hosting-and-deployment/hosting-on-github/&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cisco sshd config</title>
      <link>https://huifeng.me/posts/cisco-sshd-conf/</link>
      <pubDate>Sat, 29 Feb 2020 10:47:39 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/cisco-sshd-conf/</guid>
      <description>&lt;ol start=&#34;0&#34;&gt;
&lt;li&gt;test if device can up sshd service&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;if&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# show ip ssh&lt;/span&gt;

SSH Disabled - version 1.99
%Please create RSA keys to &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; SSH &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;and of atleast &lt;span class=&#34;m&#34;&gt;768&lt;/span&gt; bits &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; SSH v2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;.
Authentication methods:publickey,keyboard-interactive,password
Authentication timeout: &lt;span class=&#34;m&#34;&gt;120&lt;/span&gt; secs&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; Authentication retries: &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
Minimum expected Diffie Hellman key size : &lt;span class=&#34;m&#34;&gt;1024&lt;/span&gt; bits
IOS Keys in SECSH format&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ssh-rsa, base64 encoded&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: NONE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;means&amp;rsquo; ssh supported just need config&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Install openssh to redhat 6.3 via source</title>
      <link>https://huifeng.me/posts/installopensshonredhatviasource/</link>
      <pubDate>Thu, 27 Feb 2020 17:01:42 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/installopensshonredhatviasource/</guid>
      <description>&lt;p&gt;This post is the log for compile source and install some package to linux, yeah, it&amp;rsquo;ll fit to offline install while you&amp;rsquo;re download packages before.&lt;/p&gt;
&lt;h1 id=&#34;download&#34;&gt;Download&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;openssh-7.5p1 (This is the last version support: ssh protocal &amp;lt; 1.5 ) -&amp;gt; &lt;a href=&#34;https://cdn.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-7.5p1.tar.gz&#34;&gt;Download now&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;zlib-devel -&amp;gt; &lt;a href=&#34;https://www.zlib.net/zlib-1.2.11.tar.gz&#34;&gt;Download now&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;openssl-fip -&amp;gt; &lt;a href=&#34;https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz&#34;&gt;Download now&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;openssl-1.0.2u -&amp;gt; &lt;a href=&#34;https://github.com/openssl/openssl/releases/tag/OpenSSL_1_0_2u&#34;&gt;Download now&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Right way install Context (right menu)</title>
      <link>https://huifeng.me/posts/context-right-menu/</link>
      <pubDate>Wed, 22 Jan 2020 17:01:42 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/context-right-menu/</guid>
      <description>&lt;p&gt;如何添加系统右键菜单? 我把我的全收集在这里!&lt;/p&gt;
&lt;p&gt;Reference: &lt;a href=&#34;https://www.zhihu.com/question/48091139&#34;&gt;https://www.zhihu.com/question/48091139&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-to&#34;&gt;How to&lt;/h2&gt;
&lt;p&gt;Save the code below as &lt;code&gt;foobar.reg&lt;/code&gt; and execute it.&lt;/p&gt;
&lt;h2 id=&#34;notice--modify-path-&#34;&gt;Notice ! Modify path !&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Modify the path to your path! For instance: &lt;code&gt;C:\\Users\\foobar\\scoop\\apps\\git\\current\\git-bash.exe&lt;/code&gt; to &lt;code&gt;\\you\\dope\\path\\sth.exe&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Save the content as &lt;code&gt;.reg&lt;/code&gt; file and execute it as administrator.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>《A Tour of Go》 Study note</title>
      <link>https://huifeng.me/posts/go-a-tour-of-go-note.md/</link>
      <pubDate>Sat, 18 Jan 2020 11:35:36 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/go-a-tour-of-go-note.md/</guid>
      <description>&lt;p&gt;Some tips I don&amp;rsquo;t know!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GNS3 Experience Setup and usage in linux</title>
      <link>https://huifeng.me/posts/gns3-experience-simple-expriements/</link>
      <pubDate>Mon, 13 Jan 2020 19:35:36 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/gns3-experience-simple-expriements/</guid>
      <description>&lt;h1 id=&#34;install&#34;&gt;Install&lt;/h1&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gns3.com/1QXVIihk7dsOL7Xr7Bmz4zRzTsJ02wklfImGuHwTlaA4/index.html#&#34;&gt;GNS3 Installation on Linux &lt;/a&gt; 👈 no useful to Archlinux and Manjaro and no better than above! so sad!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/GNS3/dynamips&#34;&gt;Dynamips (Cisco Router Emulator)&lt;/a&gt; 👈 Official document for Dynamips&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarynature.blogspot.com/2015/11/install-configure-gns3-arch-linux.html&#34;&gt;Install and configure GNS3 on Arch Linux&lt;/a&gt; 👈 Very detailed and procise!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@Ninja/install-gns3-on-arch-manjaro-linux-the-right-way-c5a3c4fa337d&#34;&gt;Install GNS3 on Arch / Manjaro Linux (The Right Way)&lt;/a&gt; 👈 Very detailed and procise!
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sirtoffski.github.io/Arch-GNS3-Helper/&#34;&gt;Arch-GNS3-Helper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Volatility and Mimikatz</title>
      <link>https://huifeng.me/posts/volatility-mimikatz/</link>
      <pubDate>Tue, 26 Nov 2019 10:49:14 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/volatility-mimikatz/</guid>
      <description>{% centerquote 王小波 %} 人的一切痛苦，本质上都是对自己无能的愤怒。 {% endcenterquote %} [TOC] ENV： Windows* x86 python 2.7.17 # Memory dump 使用第三方软件抓取内存dump 针对于物理机,通常可以使用如下工具来抓取内存dump: KnTTools F-Response Mandiant Memoryze HBGary FastDump MoonSols Windows Memory Toolkit AccessData FTK Imager EnCase/WinEn Belkasoft Live</description>
    </item>
    
    <item>
      <title>Capture Screen or Screen Shot [C/C&#43;&#43; win32 api]</title>
      <link>https://huifeng.me/posts/c-capturescreen-screenshot/</link>
      <pubDate>Sat, 24 Aug 2019 15:56:00 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/c-capturescreen-screenshot/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://causeyourestuck.io/2016/01/12/screenshot-c-win32-api/&#34;&gt;Screenshot C++ win32 api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/rdp/9821698&#34;&gt;https://gist.github.com/rdp/9821698&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/997175/how-can-i-take-a-screenshot-and-save-it-as-jpeg-on-windows&#34;&gt;How can I take a screenshot and save it as JPEG on Windows?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/win32/gdiplus/-gdiplus-converting-a-bmp-image-to-a-png-image-use&#34;&gt;Converting a BMP Image to a PNG Image&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/win32/gdiplus/-gdiplus-retrieving-the-class-identifier-for-an-encoder-use&#34;&gt;Retrieving the Class Identifier for an Encoder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/sqn614/article/details/71105117&#34;&gt;c++链接时，无法解析的外部符号 _GdipAlloc等一系列报错&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;I implemented screen shot from two methods, this post decription the way use [C/C++ win32 api] to get it, Python edition for screen shot is more easy than this, I&amp;rsquo;ll release it late also.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HAProxy Simple Usage</title>
      <link>https://huifeng.me/posts/haproxy-simple-usage/</link>
      <pubDate>Sat, 24 Aug 2019 15:56:00 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/haproxy-simple-usage/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Reference:
&lt;a href=&#34;http://cbonte.github.io/haproxy-dconv/1.9/configuration.html#2.5&#34;&gt;http://cbonte.github.io/haproxy-dconv/1.9/configuration.html#2.5&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;No introduce, no advanced usage, also no tutor for how to install, just config to implement proxy.&lt;/p&gt;
&lt;p&gt;The case there is so easy so you can get sense of achivement quickly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Program C Basic Tips [C/C&#43;&#43;]</title>
      <link>https://huifeng.me/posts/program-c-basic-tips/</link>
      <pubDate>Sat, 24 Aug 2019 15:56:00 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/program-c-basic-tips/</guid>
      <description>&lt;p&gt;Continuous update!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to enable TLS in Nginx by Let&#39;s Encrypt</title>
      <link>https://huifeng.me/posts/how-to-enable-tls-in-nginx-by-letsencrypt/</link>
      <pubDate>Fri, 16 Aug 2019 12:08:00 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/how-to-enable-tls-in-nginx-by-letsencrypt/</guid>
      <description>&lt;p&gt;{% centerquote %}
让你的网站 https 起来吧！
{% endcenterquote %}&lt;/p&gt;
&lt;h2 id=&#34;1-enable-tls&#34;&gt;1. Enable TLS&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Reference:
&lt;a href=&#34;https://letsencrypt.org&#34;&gt;https://letsencrypt.org&lt;/a&gt;
&lt;a href=&#34;https://certbot.eff.org&#34;&gt;https://certbot.eff.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;11-setup-certbot&#34;&gt;1.1. Setup Certbot&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F&#34;&gt;Enable EPEL repo&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo yum install epel-release
$ sudo yum install subscription-manager
$ subscription-manager repos --enable &amp;quot;rhel-*-optional-rpms&amp;quot; --enable &amp;quot;rhel-*-extras-rpms&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using CentOS, you can enable the optional channel by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo yum -y install yum-utils
$ sudo yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After doing this, you can install Certbot by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo yum install certbot python2-certbot-nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If &lt;code&gt;No package certbot available.&lt;/code&gt; occur, try the below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo yum install certbot-nginx
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Use utterances as Hexo Next theme comments</title>
      <link>https://huifeng.me/posts/use-utteranc-as-hexo-comments/</link>
      <pubDate>Fri, 09 Aug 2019 16:00:00 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/use-utteranc-as-hexo-comments/</guid>
      <description>&lt;p&gt;{% centerquote 王小波 %}
人的一切痛苦，本质上都是对自己无能的愤怒。
{% endcenterquote %}&lt;/p&gt;
&lt;h2 id=&#34;why-utterances&#34;&gt;Why Utterances?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The most similar comments to github issue.&lt;/li&gt;
&lt;li&gt;Emoji add free as github issue.&lt;/li&gt;
&lt;li&gt;Markdown support.&lt;/li&gt;
&lt;li&gt;Data storage can be trusted and stable, thanks to github.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;but-my-choice-is-valine&#34;&gt;But my choice is Valine&lt;/h2&gt;
&lt;p&gt;Oh my, after study utterances, I have to changed my choice to &lt;a href=&#34;https://valine.js.org/&#34;&gt;Valine&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;utterances need to modify many theme files, I think I&amp;rsquo;ll forget where to restore it.&lt;/li&gt;
&lt;li&gt;utterances&amp;rsquo;s replies are not smart enough.&lt;/li&gt;
&lt;li&gt;utterances has more differ from github issue after all, it lost some great features like reply.&lt;/li&gt;
&lt;li&gt;utterances cannot display count of comments at home page.&lt;/li&gt;
&lt;li&gt;Valine not the best one but enough for me, except add emoji free to bottom line.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, this post is just a study and successful attempt for utterances.&lt;/p&gt;
&lt;h2 id=&#34;why-not-gitment-or-gitalk&#34;&gt;Why not Gitment or Gitalk?&lt;/h2&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/imsun/gitment#is-it-safe-to-make-my-client-secret-public&#34;&gt;https://github.com/imsun/gitment#is-it-safe-to-make-my-client-secret-public&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.wolfogre.com/posts/security-problem-of-gitment/&#34;&gt;https://blog.wolfogre.com/posts/security-problem-of-gitment/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Binary I/O operation</title>
      <link>https://huifeng.me/posts/binary-io-operation/</link>
      <pubDate>Fri, 26 Jul 2019 11:50:00 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/binary-io-operation/</guid>
      <description>I coped with character type coversion to let it looks like c type, and search bytes from *.dll to modify it. so, there is sth I learned and written down here.
# Binary I/O operation Define!
def hex_read(filepath: str) -&amp;gt; bytearray: if os.path.isfile(filepath): with open(filepath, &amp;#39;rb&amp;#39;) as f: data = bytearray(f.read()) return data Usage:
dll_data = hex_read(&amp;#39;D:\\test\\test.dll&amp;#39;) Find bytes and replace it:
index_start = dll_data.find(b&amp;#39;\x85\x69\xf0\x7f&amp;#39;) index_end = index_start + 100 if index_start != -1: data_old = dll_data[index_start:index_end] data_new = replacebytes # replacebytes is the content you want to replace dll_data_new = dll_data.replace(data_old, data_new) with open(&amp;#39;D:\\test\\test.dll&amp;#39;, &amp;#39;wb&amp;#39;) as f: f.write(dll_data_new) </description>
    </item>
    
    <item>
      <title>Hex byte string int coversion</title>
      <link>https://huifeng.me/posts/hex-b-str-int-switch-in-python/</link>
      <pubDate>Fri, 26 Jul 2019 09:56:00 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/hex-b-str-int-switch-in-python/</guid>
      <description>Reference:
 https://docs.python.org/zh-cn/3/library/stdtypes.html https://docs.python.org/zh-cn/3/library/struct.html   # Python Types Coversion hey, there are some usefull features below, I will update at intervals:
bit_length() New in version 3.1:
In [73]: n = -37 In [74]: bin(n) Out[74]: &#39;-0b100101&#39; In [75]: n.bit_length() Out[75]: 6  hex to int:
In [59]: int(&#39;0x22357&#39;, 16) Out[59]: 140119  int to hex:
In [32]: hex(141128) Out[32]: &#39;0x22748&#39;  packed binary data to int:
In [70]: struct.unpack(&amp;quot;I&amp;quot;, b&#39;\x57\x23\x02\x00&#39;) Out[70]: (140119,) In [71]: type(struct.unpack(&amp;quot;I&amp;quot;, b&#39;\x57\x23\x02\x00&#39;)) Out[71]: tuple In [72]: struct.unpack(&amp;quot;I&amp;quot;, b&#39;\x57\x23\x02\x00&#39;)[0] Out[72]: 140119   what is param &amp;ldquo;I&amp;rdquo;? Read More about struct  int to packed binary data:</description>
    </item>
    
    <item>
      <title>V2ray install and config</title>
      <link>https://huifeng.me/posts/v2ray-install-and-config/</link>
      <pubDate>Mon, 15 Jul 2019 23:56:00 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/v2ray-install-and-config/</guid>
      <description>Reference: https://toutyrater.github.io/prep/install.html # 1. Install Install or update by script: wget https://install.direct/go.sh sudo bash go.sh Return: PORT:111 UUID:9d1712fd-f641-4be9-b2ca-99c9dc000aeb # 2. Config 2.1. WebSocket+TLS+Web Stable but not fast! Server /etc/v2ray/config.json : { &amp;#34;inbounds&amp;#34;: [{ &amp;#34;port&amp;#34;: 111, &amp;#34;listen&amp;#34;: &amp;#34;127.0.0.1&amp;#34;, &amp;#34;protocol&amp;#34;: &amp;#34;vmess&amp;#34;, &amp;#34;settings&amp;#34;: { &amp;#34;clients&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;9d1712fd-f641-4be9-b2ca-99c9dc000aeb&amp;#34;, &amp;#34;level&amp;#34;: 1, &amp;#34;alterId&amp;#34;: 64 } ] }, &amp;#34;streamSettings&amp;#34;: { &amp;#34;network&amp;#34;: &amp;#34;ws&amp;#34;, &amp;#34;wsSettings&amp;#34;: { &amp;#34;path&amp;#34;: &amp;#34;/wahaha&amp;#34; } } }], &amp;#34;outbounds&amp;#34;: [{ &amp;#34;protocol&amp;#34;: &amp;#34;freedom&amp;#34;, &amp;#34;settings&amp;#34;: {} }] } Client: { &amp;#34;inbounds&amp;#34;: [ { &amp;#34;port&amp;#34;: 1080, &amp;#34;listen&amp;#34;: &amp;#34;127.0.0.1&amp;#34;, &amp;#34;protocol&amp;#34;: &amp;#34;socks&amp;#34;, &amp;#34;sniffing&amp;#34;: { &amp;#34;enabled&amp;#34;: true, &amp;#34;destOverride&amp;#34;: [&amp;#34;http&amp;#34;, &amp;#34;tls&amp;#34;] }, &amp;#34;settings&amp;#34;: { &amp;#34;auth&amp;#34;: &amp;#34;noauth&amp;#34;, &amp;#34;udp&amp;#34;: false } } ],</description>
    </item>
    
    <item>
      <title>Deploy Hexo to VPS By Caddy And Webhooks(Python)</title>
      <link>https://huifeng.me/posts/deploy-hexo-to-vps-by-caddy-and-webhooks/</link>
      <pubDate>Thu, 11 Jul 2019 12:00:00 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/deploy-hexo-to-vps-by-caddy-and-webhooks/</guid>
      <description>&lt;p&gt;There are steps to make Hexo works well with caddy, github webhooks and service script write by python3.&lt;/p&gt;
&lt;p&gt;Why not nginx, because I know well about it, I think, and now I want to try caddy.&lt;/p&gt;
&lt;p&gt;Why not git to deploy it？ &lt;a href=&#34;https://huifeng.me/2015/08/16/deploy-hexo-to-vps/&#34;&gt;This is the way to use git for deployment&lt;/a&gt;. But it was outdated or I think, use webhooks and caddy maybe the pop and better way than that.&lt;/p&gt;
&lt;p&gt;This is not as common use for webhooks, the main idear for easy to write hexo blog is follow:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One github&amp;rsquo;s repository cloned at your local system: Only write your md files at there.
Two folders at VPS to clone your md files and generate by hexo for deploy.&lt;/p&gt;
&lt;p&gt;Advantage:
Write blog so easy, just write down and push to github.
Generate at server, so you never need install hexo to your local system, so you can write and push anywhere have git installed
Generate at server, so it will stable and faster than local.&lt;/p&gt;
&lt;p&gt;Disadvantage:
Many settings and preparations at VPS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My System environment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Local: Windows 10&lt;/li&gt;
&lt;li&gt;VPS: Ubuntu 18.04 LTS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;OK, let&amp;rsquo;s GO!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Outline:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Preparation for your host: git&lt;/li&gt;
&lt;li&gt;Preparation for your VPS: git, Node.js, Hexo, webhook scripts&lt;/li&gt;
&lt;li&gt;Install and config Caddy to your VPS&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Install nginx php7 and config firewalld in CentOS 7.6</title>
      <link>https://huifeng.me/posts/install-nginx-php7-and-config-firewalld-in-centos-7.6/</link>
      <pubDate>Wed, 16 Jan 2019 10:47:39 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/install-nginx-php7-and-config-firewalld-in-centos-7.6/</guid>
      <description>&lt;h1 id=&#34;1-服务器环境&#34;&gt;1. 服务器环境&lt;/h1&gt;
&lt;p&gt;系统：CentOS 7.6
防火墙：firewalld&lt;/p&gt;
&lt;h2 id=&#34;11-防火墙配置&#34;&gt;1.1. 防火墙配置&lt;/h2&gt;
&lt;p&gt;此防火墙为 CentOS 7.6 自带自启动，默认没有任何通路出去，你只能从外面ping的通，ssh连接，其他什么也做不了。&lt;/p&gt;
&lt;p&gt;下面我们开放两个端口，一个是 &lt;code&gt;80/TCP&lt;/code&gt; ，一个是自定义的ssh连接端口 &lt;code&gt;123/TCP&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ firewall-cmd --permanent --add-port=80/tcp
$ firewall-cmd --permanent --add-port=123/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;firewall-cmd：是Linux提供的操作firewall的一个工具;&lt;/li&gt;
&lt;li&gt;&amp;ndash;permanent：表示设置为持久;&lt;/li&gt;
&lt;li&gt;&amp;ndash;add-port：标识添加的端口;&lt;/li&gt;
&lt;li&gt;&amp;ndash;zone=public:指定的zone为public(不加此参数默认都是添加到这里).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;默认的，通过命令行添加的规则会添加到文件： &lt;code&gt;/etc/firewalld/zones/public.xml&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://huifeng.me/about/</link>
      <pubDate>Sat, 29 Dec 2018 20:24:28 +0800</pubDate>
      
      <guid>https://huifeng.me/about/</guid>
      <description>Contact: Mail：wedojava@gmail.com
 Donate: </description>
    </item>
    
    <item>
      <title>how to export exchange logs to csv by logparser</title>
      <link>https://huifeng.me/posts/exchange-logs-to-csv-by-logparser/</link>
      <pubDate>Wed, 28 Nov 2018 12:28:35 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/exchange-logs-to-csv-by-logparser/</guid>
      <description>You can download logParser from microsoft : https://www.microsoft.com/en-us/download/confirmation.aspx?id=24659
# 1. In short, run: LogParser &amp;#34;select [#Fields: date-time] as date, sender-address, recipient-address, recipient-count, return-path, client-hostname, client-ip, server-hostname, server-ip, original-client-ip, original-server-ip, event-id, total-bytes, connector-id, message-subject, source into C:\ExChange\log_all\result.csv from C:\ExChange\log_all\MessageTracking\*.LOG&amp;#34; -i:CSV -headerRow:on -nSkipLines:4 code above can export all logs to one csv file.
 -nSkipLines:4 : filter 4 lines at begin.the log files&amp;rsquo; first 4 lines is the head of file,no need for export. [#Fields: date-time] as date : style like #Fields: date-time is complex title for csv, make it like [#Fields: date-time] can get the true info from log files.  # 2.</description>
    </item>
    
    <item>
      <title>Linux桌面版 &amp; Windows 如何使用 V2ray 服务?</title>
      <link>https://huifeng.me/posts/the-right-way-make-linux-desktop-use-v2ray-service/</link>
      <pubDate>Fri, 12 Oct 2018 10:28:37 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/the-right-way-make-linux-desktop-use-v2ray-service/</guid>
      <description>&lt;p&gt;其实我配好的是 Ubuntu 桌面版,如何使用 V2ray,不管什么桌面其实基本大同小异,路子很重要, 路子对了,剩下的就简单了,搞明白后恍然大悟,这么简单就怪自己当时没仔细看文档啊!!!&lt;/p&gt;
&lt;p&gt;本篇是介绍 V2ray 客户端的使用配置的, 服务端的安装请参照本站另一文.&lt;/p&gt;
&lt;p&gt;本篇只讲重点,很多内容官方文档都有说明.&lt;/p&gt;
&lt;p&gt;个人体验是, 如果文档吃透了, 其实命令行的方式启用 V2ray 是最简单的.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Install pip to Ubuntu 18.04</title>
      <link>https://huifeng.me/posts/install-pip-2-ubuntu-18/</link>
      <pubDate>Thu, 11 Oct 2018 23:17:53 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/install-pip-2-ubuntu-18/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考文档:
&lt;a href=&#34;https://www.linuxidc.com/Linux/2018-05/152390.htm&#34;&gt;https://www.linuxidc.com/Linux/2018-05/152390.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文只讲重点!&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Fix VMware kernel headers for versions not found</title>
      <link>https://huifeng.me/posts/fix-vmware-kernel-headers-for-versions-not-found/</link>
      <pubDate>Thu, 11 Oct 2018 22:38:15 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/fix-vmware-kernel-headers-for-versions-not-found/</guid>
      <description>Ubuntu 18 的宿主机,核心 Update 了,然后要求重启,然后, VMware 起不来了, 报错: linux VM kernel headers 4.15.0-37-generic were not found So, Google and Sogou, and look: https://blog.csdn.net/ritterliu/article/details/7554183 http://www.vi-toolkit.com/wiki/index.php/Build_host_vmware_kernel_modules 长话短说,我运行了下面一行,然后就好了! ↓ sudo apt-get install linux-headers-$(uname -r) Good luck good day!</description>
    </item>
    
    <item>
      <title>Setup-Debian9-Init</title>
      <link>https://huifeng.me/posts/setup-debian9-init/</link>
      <pubDate>Thu, 11 Oct 2018 18:35:12 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/setup-debian9-init/</guid>
      <description>&lt;p&gt;本文 Debian 9 安装历程，安装包选的是最小版，界面在安装时选择的是 Xfce，选择它是因为它最快！&lt;/p&gt;
&lt;p&gt;本文主要记录联网,VM工具,更换国内源,输入法的安装,让debian的桌面翻墙我新开一页写吧.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fix OmniMarkdownPreview Cannot Preview</title>
      <link>https://huifeng.me/posts/fix-omnimarkdownpreview-cannot-preview/</link>
      <pubDate>Wed, 10 Oct 2018 10:49:14 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/fix-omnimarkdownpreview-cannot-preview/</guid>
      <description>{% centerquote 王小波 %} 人的一切痛苦，本质上都是对自己无能的愤怒。 {% endcenterquote %} Quick Fix 1: Remove Strikethrough Extension Sublime Text &amp;gt; Preferences &amp;gt; Package Settings &amp;gt; OmniMarkupPreviewer &amp;gt; Settings - User paste the following to remove the strikeout package. { &amp;#34;renderer_options-MarkdownRenderer&amp;#34;: { &amp;#34;extensions&amp;#34;: [&amp;#34;tables&amp;#34;, &amp;#34;fenced_code&amp;#34;, &amp;#34;codehilite&amp;#34;] } } Quick Fix 2: Fix the Strikethrough Extension (if you need it) Find the python-markdown sublime package. On the Mac: subl &amp;#34;/Users/&amp;lt;username&amp;gt;/Library/Application Support/Sublime Text 3/Packages/OmniMarkupPreviewer/OmniMarkupLib/Renderers/libs/mdx_strikeout.py&amp;#34; Replace the makeExtension() method with the following: def makeExtension(*args, **kwargs):</description>
    </item>
    
    <item>
      <title>通过 V2ray 实现科学上网</title>
      <link>https://huifeng.me/posts/get-through-gfw-by-v2ray/</link>
      <pubDate>Mon, 08 Oct 2018 18:03:45 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/get-through-gfw-by-v2ray/</guid>
      <description>&lt;h1 id=&#34;1-前言&#34;&gt;1. 前言&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;如果要老老实实的，踏踏实实的学习，推荐参考官方网站：https://www.v2ray.com&lt;/li&gt;
&lt;li&gt;如果要快速完成，没想要学习了解，推荐：https://v2ray66.com&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-服务器安装&#34;&gt;2. 服务器安装&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;V2Ray 官方文档：&lt;a href=&#34;https://www.v2ray.com/chapter_00/install.html&#34;&gt;https://www.v2ray.com/chapter_00/install.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;V2Ray 配置指南(简易直白):&lt;a href=&#34;https://toutyrater.github.io/prep/install.html&#34;&gt;https://toutyrater.github.io/prep/install.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实不相瞒,一键的更好用:&lt;/strong&gt; &lt;a href=&#34;https://v2ray66.com/post/13/&#34;&gt;https://v2ray666.com/post/13/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Install Redis Cache on Ubuntu Server with PHP 7 and ownCloud</title>
      <link>https://huifeng.me/posts/install-redis-cache-on-ubuntu-server-with-php-7-and-owncloud/</link>
      <pubDate>Wed, 08 Jun 2016 17:30:33 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/install-redis-cache-on-ubuntu-server-with-php-7-and-owncloud/</guid>
      <description>参考: https://www.techandme.se/install-redis-cache-on-ubuntu-server-with-php-7-and-owncloud/ 缓存,owncloud推荐使用的是 APCu 和 Redis,we with PHP 7 needed to build the PHP module as well, because PECL install didn’t work on PHP 7 yet. And as usual – as we didn’t find any good straight forward guide, here is one that works, enjoy! 原文说的已经很清楚了,细心点应该不会出错,我这里只记录</description>
    </item>
    
    <item>
      <title>LAMP环境搭建(Ubuntu14.04 For OwnCloud)</title>
      <link>https://huifeng.me/posts/lamp-stepbystep/</link>
      <pubDate>Thu, 19 May 2016 12:23:57 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/lamp-stepbystep/</guid>
      <description>&lt;p&gt;本日志主要记录我配置OwnCloud环境的过程,注意,针对OwnCloud,至于某些模块开启和关闭问题,可以根据具体情况自行调整.另外我操作的系统是Ubuntu14.04LTS.
这里推荐一个很不错的文档位置:https://www.linode.com/docs/&lt;/p&gt;
&lt;p&gt;感悟:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遇坑过坑,佛挡杀佛.&lt;/li&gt;
&lt;li&gt;看文档很重要,当然,能去官方的GitHub看看更好.&lt;/li&gt;
&lt;li&gt;最大坑解决过程: OwnCloud文档 -&amp;gt; MySQL文档 -&amp;gt; MariaDB文档 -&amp;gt; Google -&amp;gt; MySQL/MariaDB文档 -&amp;gt; Github/owncloud/core -&amp;gt; issue -&amp;gt;search for my ailling key-&amp;gt; get it!!&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LEMP/LNMP　环境搭建(Nginx1.10 &#43; PHP7)</title>
      <link>https://huifeng.me/posts/lemp-step-to-step/</link>
      <pubDate>Wed, 18 May 2016 18:38:05 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/lemp-step-to-step/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;更多文档请浏览官方文档和Wiki，这个很重要，其实文档里已经说的很清楚了，会遇到的Bug往往在回复里也有。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Shell Study</title>
      <link>https://huifeng.me/posts/shell-study/</link>
      <pubDate>Thu, 05 May 2016 10:47:39 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/shell-study/</guid>
      <description>$ pushd $openssh_source_dir &amp;gt; /dev/null 命令 说明 command &amp;gt; file 将输出重定向到 file。 command &amp;lt; file 将输入重定向到 file。 command &amp;raquo; file 将输出以追加的方式重定向到 file。 n &amp;gt; file 将文件描述符为 n 的文件重定向到 file。 n &amp;raquo; file 将文件描述符为 n 的文件以追加</description>
    </item>
    
    <item>
      <title>sudo命令输入密码还是不能用？</title>
      <link>https://huifeng.me/posts/sudo-unable-in-centos/</link>
      <pubDate>Thu, 05 May 2016 10:47:39 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/sudo-unable-in-centos/</guid>
      <description>&lt;p&gt;sudo Command is unable in centos system?&lt;/p&gt;
&lt;p&gt;我遇到了这样的问题，在 CentOS 7　系统下，执行 &lt;code&gt;sudo&lt;/code&gt;　提示 &lt;code&gt;Sorry, try again.&lt;/code&gt;　，密码是正确的密码，当前用户和　root　的密码都试过，都是这样　&lt;code&gt;visudo&lt;/code&gt; 也都配置正确，怎么办？&lt;/p&gt;
&lt;p&gt;我参考了这里：https://www.centos.org/forums/viewtopic.php?t=40708&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux系统下，如何重置root密码？</title>
      <link>https://huifeng.me/posts/how-to-reset-root-password/</link>
      <pubDate>Wed, 04 May 2016 19:10:49 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/how-to-reset-root-password/</guid>
      <description>&lt;p&gt;本人遇到一个很尴尬的问题，忘记了　vps　的　root　的密码。怎么办？查阅官方提示，找到如下方法：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.vultr.com/docs/boot-into-single-user-mode-reset-root-password&#34;&gt;https://www.vultr.com/docs/boot-into-single-user-mode-reset-root-password&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Owncloud　安装实录(Apache2.4&#43;PHP7&#43;MariaDB10)</title>
      <link>https://huifeng.me/posts/owncloud-install/</link>
      <pubDate>Tue, 03 May 2016 11:29:51 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/owncloud-install/</guid>
      <description>&lt;p&gt;本来是用的　Homestead　box　虚拟机环境，但是遇到些问题，看到官方例子是用　Apache，并且官方推荐是用Apache 的 mod_php　来解析PHP。这里记录下整个过程。So many chores beat me?No chores can beat me.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于是打算用作运维的环境搭建，所以一切跟着官方文档做吧。
起始文档：
&lt;a href=&#34;https://doc.owncloud.org/server/9.0/admin_manual/installation/source_installation.html&#34;&gt;https://doc.owncloud.org/server/9.0/admin_manual/installation/source_installation.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>为 Ubuntu 加载新硬盘</title>
      <link>https://huifeng.me/posts/new-disk-mount-to-ubuntu/</link>
      <pubDate>Tue, 19 Apr 2016 13:10:53 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/new-disk-mount-to-ubuntu/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Thanks for: &lt;a href=&#34;http://www.111cn.net/sys/Ubuntu/73675.htm&#34;&gt;http://www.111cn.net/sys/Ubuntu/73675.htm&lt;/a&gt;
用 vagrant 本地虚拟了一个 Ubuntu，想把数据放到单独的磁盘里，查阅资料，下面把日志记录下来。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Docker-Install-Log</title>
      <link>https://huifeng.me/posts/docker-install-log/</link>
      <pubDate>Wed, 17 Feb 2016 11:07:48 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/docker-install-log/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/yeasy/docker_practice/details&#34;&gt;Docker —— 从入门到实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/linux/&#34;&gt;Docker官方-Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>laravel-artisan-model-常用命令</title>
      <link>https://huifeng.me/posts/laravel-artisan-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 31 Dec 2015 13:53:07 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/laravel-artisan-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>&lt;p&gt;常常会用到 artisan 的一些命令，往往要去查文档，翻弄半天，不方便，这里归纳在这里&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>laravel-服务提供者-我是这么理解的</title>
      <link>https://huifeng.me/posts/laravel-%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85-%E6%88%91%E6%98%AF%E8%BF%99%E4%B9%88%E7%90%86%E8%A7%A3%E7%9A%84/</link>
      <pubDate>Wed, 23 Dec 2015 18:18:30 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/laravel-%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E8%80%85-%E6%88%91%E6%98%AF%E8%BF%99%E4%B9%88%E7%90%86%E8%A7%A3%E7%9A%84/</guid>
      <description>&lt;p&gt;关于 laravel 的很多理解还是比较缺乏，最近看 laravel 学院的基础教程，这里把我的个人理解放这里，方便日后温故。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Ubuntu和CentOS里用IPSec/IKEV2搭建VPN服务器</title>
      <link>https://huifeng.me/posts/%E5%9C%A8ubuntu%E5%92%8Ccentos%E9%87%8C%E7%94%A8ipsec-ikev2%E6%90%AD%E5%BB%BAvpn%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Sat, 19 Dec 2015 20:15:38 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/%E5%9C%A8ubuntu%E5%92%8Ccentos%E9%87%8C%E7%94%A8ipsec-ikev2%E6%90%AD%E5%BB%BAvpn%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考文档：https://quericy.me/blog/512
一键脚本：http://quericy.me/blog/699
目前用的一键脚本：https://blog.ls20.com/ipsec-l2tp-vpn-auto-setup-for-ubuntu-12-04-on-amazon-ec2/
一键脚本说明：https://github.com/hwdsl2/setup-ipsec-vpn&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为我的 vps 是 CentOS 系统，所以 Ubuntu 没测试，本日志主要记录我在 CentOS 上的各种操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My Nodejs And Ghost Install On CentOS7.1</title>
      <link>https://huifeng.me/posts/mynodejsandghostinstalloncentos7-1-md/</link>
      <pubDate>Thu, 22 Oct 2015 19:48:57 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/mynodejsandghostinstalloncentos7-1-md/</guid>
      <description>&lt;p&gt;今天试着在 CentOS-7.1虚拟机上安装 nodejs 的环境，安装这个环境当然是为了能运行 Ghost 博客程序了，为什么要在虚拟机上安装？那是因为我打算搞到我自己的局域网服务器环境里去。下面开始！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>神器wget的使用方法</title>
      <link>https://huifeng.me/posts/utilities-wget/</link>
      <pubDate>Mon, 21 Sep 2015 18:19:17 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/utilities-wget/</guid>
      <description>&lt;p&gt;此乃神器也,然,深度使用尚需学习,文分两段:全站下载和常用参数说明&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>laravel-homestead 开发环境使用</title>
      <link>https://huifeng.me/posts/laravel-homestead-note/</link>
      <pubDate>Sun, 20 Sep 2015 14:28:35 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/laravel-homestead-note/</guid>
      <description>&lt;p&gt;这里记录下我使用 vagrant 来做开发环境的各种经验，本文主要讲通过 homestead 命令行来控制虚拟机。
之前我用 vagrant 搭建了自己的方便移动的开发和生产环境，用过 CentOS-6.5 CentOS-7.0 CentOS-7.1，最终我回到了官方提供的开发环境：&lt;code&gt;laravel/homestead&lt;/code&gt;，为什么要绕一圈，为什么绕了一圈又回来了呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sublime-text3使用经验</title>
      <link>https://huifeng.me/posts/sublime-text3-mastery/</link>
      <pubDate>Mon, 07 Sep 2015 12:01:03 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/sublime-text3-mastery/</guid>
      <description>&lt;p&gt;这个编辑器的打开速度是我喜欢的，它的自定义性又很强，经历bracket,atom等各种编辑器后，最后由laracastes.com再次将我带入Sublime text3的世界。下面，我主要介绍下中文输入法和laracastes.com里说的各种技巧。当然前提还是：你得学会在中国上互联网，代理或VPN都行。
下面进入正题.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>跟着宁皓网学 Browser-sync</title>
      <link>https://huifeng.me/posts/ninghao-browser-sync-01/</link>
      <pubDate>Tue, 01 Sep 2015 22:26:07 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/ninghao-browser-sync-01/</guid>
      <description>&lt;p&gt;这东西很不错，可以让浏览器和我们的文件同步显示，意思是，你一修改完 css 或者 js 或者 Html，立即就能看到浏览器里他们的变化。 You&amp;rsquo;re worth it!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>跟着宁皓网学 SemanticUI 学习笔记(01)</title>
      <link>https://huifeng.me/posts/ninghao-semantic-study-01/</link>
      <pubDate>Tue, 01 Sep 2015 21:18:48 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/ninghao-semantic-study-01/</guid>
      <description>&lt;p&gt;至于 SemanticUI 也做过一些调研，最后还是选择了它，最重要的原因是想跟着宁皓学学看，我想，任何界面框架，学好了都能做很多事情，有人说，semantic 太大，那么，你学好它，只 build 你需要的功能，它应该就满足你的需要了吧，而且，这个也许还不是我们页面的瓶颈。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu安装黑屏问题(ubuntu black screen)</title>
      <link>https://huifeng.me/posts/ubuntu-black-screen/</link>
      <pubDate>Tue, 01 Sep 2015 19:09:05 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/ubuntu-black-screen/</guid>
      <description>&lt;p&gt;今天为一台联想安装ubuntu系统，确实手闲，看&lt;code&gt;Elementary OS&lt;/code&gt;非常漂亮，就把一台好好的机子给做了，于是被坑了，但是问题最终通过我强大的搜索能力和完美的解决问题的思路，最终搞定了。下面记录下经验。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git劈腿实战:让项目脚踩两条船</title>
      <link>https://huifeng.me/posts/git-push-and-backup-to-coding/</link>
      <pubDate>Thu, 27 Aug 2015 17:55:02 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/git-push-and-backup-to-coding/</guid>
      <description>&lt;p&gt;如何让你的项目可以劈腿呢?可以同时向两个位置push呢?如何实现github和coding上代码同步呢?
其实将代码同时放到GitHub和Coding上在本地看来,就是需要两次push,两次push的名称不同
一次是默认的,比如我的主要库是在GitHub上的&lt;code&gt;origin master&lt;/code&gt;,
一次是指定的,比如我的备份库是在Coding上的&lt;code&gt;coding-copy master&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>修改系统环境变量</title>
      <link>https://huifeng.me/posts/system-path-edit/</link>
      <pubDate>Wed, 26 Aug 2015 00:18:16 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/system-path-edit/</guid>
      <description>&lt;p&gt;每次,每次要改系统变量都要查,都要搜索,这次我把这个知识点记录下来,主要针对Linux和Mac系统.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>让终端更美丽动人-解决乱码问题</title>
      <link>https://huifeng.me/posts/made-iterm2-lovely-and-amazing/</link>
      <pubDate>Tue, 25 Aug 2015 21:50:12 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/made-iterm2-lovely-and-amazing/</guid>
      <description>&lt;h2 id=&#34;made-iterm2-lovely-and-amazing&#34;&gt;Made iTerm2 lovely and amazing&lt;/h2&gt;
&lt;p&gt;为了让我的Mac的终端更漂亮,我结结实实的经历了一番折腾,之前一直被卡在乱码的事情上了,今天解决了,这里记录下经验.
本文适用于Mac OSX系统,Linux系统也可以,办法都是一样的.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://7xkxlk.com1.z0.glb.clouddn.com/blog/mac/iterm2-01.png&#34; alt=&#34;iterm2.screenshot&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是我的样式,你喜欢的话可以继续往下看.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mac OSX 系统下通过 ProxyChains-NG 实现终端（命令行）翻墙</title>
      <link>https://huifeng.me/posts/proxychains-ng-4-osx-setting/</link>
      <pubDate>Sun, 23 Aug 2015 14:29:56 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/proxychains-ng-4-osx-setting/</guid>
      <description>&lt;p&gt;起因:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我中华大地大局域网风云变幻,目前&lt;code&gt;git push&lt;/code&gt; &lt;code&gt;git pull&lt;/code&gt;  &lt;code&gt;git clone&lt;/code&gt;等,单反需要访问真互联网的操作总让人痛心!痛彻心扉~~
怎么办?shadowsocks可以让我访问真互联网,但是每次命令行都会遇到一些问题,开启全局代理依然无法git 到 GitHub.怎么办?之前试过tsocks,现在,我的体验是,它只能支持wget,不能git
为了方便快捷解决这个问题,这里推荐下ProxyChains-NG,下面具体操作.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>shadowsocks使用帮助和下载</title>
      <link>https://huifeng.me/posts/shadowsocks-bakup/</link>
      <pubDate>Sun, 23 Aug 2015 12:19:26 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/shadowsocks-bakup/</guid>
      <description>&lt;p&gt;Shadowsocks Python源码(&lt;a href=&#34;https://coding.net/s/3db823c3-e9fc-47f5-8eeb-6fc619c2f73a&#34;&gt;zip包&lt;/a&gt;,&lt;a href=&#34;https://coding.net/s/882162c5-939f-4746-aa77-f507c989b358&#34;&gt;tar包&lt;/a&gt;)解压后,进入目录运行&lt;code&gt;python setup.py&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AlwaysForgottenTickets</title>
      <link>https://huifeng.me/posts/alwaysforgottentickets/</link>
      <pubDate>Fri, 21 Aug 2015 17:01:42 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/alwaysforgottentickets/</guid>
      <description>&lt;h3 id=&#34;记录下平时常用又不止一次忘记的&#34;&gt;记录下平时常用又不止一次忘记的&amp;hellip;&amp;hellip;&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>Deploy Hexo sites to VPS</title>
      <link>https://huifeng.me/posts/deploy-hexo-to-vps/</link>
      <pubDate>Sun, 16 Aug 2015 00:49:53 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/deploy-hexo-to-vps/</guid>
      <description>&lt;p&gt;&lt;strong&gt;参考以下内容,感谢原作者,转载留个链接:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Berry的博客: 已消失&amp;hellip;&amp;hellip;
添加新用户,SSH设置,参考了Linode官方帮助:&lt;a href=&#34;https://www.linode.com/docs/security/securing-your-server/&#34;&gt;Securing Your Server&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;两种方法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在VPS上执行&lt;code&gt;hexo server&lt;/code&gt;，再配置Nginx反向代理，让blog的域名指向&lt;code&gt;http://localhost:4000&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在本地生成静态文件，把静态文件部署到VPS上，用Nginx直接做Web服务。(嗯,我喜欢这种,就用这种吧)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Linode 的 CentOS-7.1 初始化操作</title>
      <link>https://huifeng.me/posts/linode-centos-init/</link>
      <pubDate>Sat, 15 Aug 2015 22:34:14 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/linode-centos-init/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考文献:https://www.linode.com/docs/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;前面内容不再多说,直接说我开始的地方:&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>PHP编码规范-学习笔记</title>
      <link>https://huifeng.me/posts/php%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 11 Aug 2015 23:52:03 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/php%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;p&gt;PHP标准组 提出并发布了一系列的风格建议。其中有部分是关于代码风格的，即 PSR-0, PSR-1, PSR-2 和 PSR-4。这些推荐只是一些被其他项目所遵循的规则，如 Drupal, Zend, Symfony, CakePHP, phpBB, AWS SDK, FuelPHP, Lithium 等。你可以把这些规则用在自己的项目中，或者继续使用自己的风格。通常情况下，你应该遵循一个已知的标准来编写 PHP 代码。可能是 PSR 的组合或者是 PEAR 或 Zend 编码准则中的一个。这代表其他开发者能够方便的阅读和使用你的代码，并且使用这些组件的应用程序可以和其他第三方的组件保持一致。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MacOSX安装NPM经验谈</title>
      <link>https://huifeng.me/posts/macosx%E5%AE%89%E8%A3%85npm%E7%BB%8F%E9%AA%8C%E8%B0%88/</link>
      <pubDate>Tue, 11 Aug 2015 22:44:10 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/macosx%E5%AE%89%E8%A3%85npm%E7%BB%8F%E9%AA%8C%E8%B0%88/</guid>
      <description>&lt;p&gt;为了装hexo-cli,需要先装配好npm环境和Git环境,于是接触到了npm的安装难的问题,我在Ubuntu系统上遇到的问题是个别目录无权限访问,我在Mac上也遇到了同样的问题,有建议是用&lt;code&gt;root&lt;/code&gt;权限取安装就好了,但是我不想这样,这样势必是影响了我的操作习惯,&lt;code&gt;root&lt;/code&gt;的根目录和非root用户的根目录不同的.所以我这么做了:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sudo chown -R [你的当前用户名] /usr/local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你已经安装了很多了,建议直接删除掉项目里的&lt;code&gt;node_moudles&lt;/code&gt;,重新安装.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>&#39;问题:能解析html但不能解析php&#39;</title>
      <link>https://huifeng.me/posts/%E9%97%AE%E9%A2%98-%E8%83%BD%E8%A7%A3%E6%9E%90html%E4%BD%86%E4%B8%8D%E8%83%BD%E8%A7%A3%E6%9E%90php/</link>
      <pubDate>Mon, 10 Aug 2015 20:46:02 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/%E9%97%AE%E9%A2%98-%E8%83%BD%E8%A7%A3%E6%9E%90html%E4%BD%86%E4%B8%8D%E8%83%BD%E8%A7%A3%E6%9E%90php/</guid>
      <description>&lt;p&gt;这种情况一般是因为权限问题导致的,最开始遇到这种情是用linuxeye的一键遇到的,共享出来和本地映射的文件夹里的php代码不能被解析,在虚拟机里查看文件夹环境,发现都是www的用户和用户组,但是怎么改都改不过来,在宿主机上怎么改owner也是徒劳,怎么办呢?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>&#39;问题:怎么修改页面都不生效&#39;</title>
      <link>https://huifeng.me/posts/%E9%97%AE%E9%A2%98-%E6%80%8E%E4%B9%88%E4%BF%AE%E6%94%B9%E9%A1%B5%E9%9D%A2%E9%83%BD%E4%B8%8D%E7%94%9F%E6%95%88/</link>
      <pubDate>Mon, 10 Aug 2015 20:44:08 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/%E9%97%AE%E9%A2%98-%E6%80%8E%E4%B9%88%E4%BF%AE%E6%94%B9%E9%A1%B5%E9%9D%A2%E9%83%BD%E4%B8%8D%E7%94%9F%E6%95%88/</guid>
      <description>vagrant＋virtualbox 安装虚拟机会遇到服务器内容修改了但是页面不变化的问题 关闭Nginx的sendfile一项的属性: sudo vim /etc/nginx/nginx.conf 找到sendfile,将on改为off,保存关闭文件.</description>
    </item>
    
    <item>
      <title>常识不常识</title>
      <link>https://huifeng.me/posts/%E5%B8%B8%E8%AF%86%E4%B8%8D%E5%B8%B8%E8%AF%86/</link>
      <pubDate>Mon, 10 Aug 2015 20:41:25 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/%E5%B8%B8%E8%AF%86%E4%B8%8D%E5%B8%B8%E8%AF%86/</guid>
      <description>&lt;h2 id=&#34;session目录的权限&#34;&gt;Session目录的权限&lt;/h2&gt;
&lt;p&gt;php.ini文件里一般会定义session文件的路径,但是php-fpm配置文件会覆盖php.ini里的配置.&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/etc/php-fpm.d/www.conf&lt;/code&gt;文件中,一般在底部会有&lt;code&gt;session.save_path&lt;/code&gt;,这里就是session文件的保存位置了&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>配置Nginx伪静态</title>
      <link>https://huifeng.me/posts/07-%E9%85%8D%E7%BD%AEnginx%E4%BC%AA%E9%9D%99%E6%80%81/</link>
      <pubDate>Mon, 10 Aug 2015 20:38:42 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/07-%E9%85%8D%E7%BD%AEnginx%E4%BC%AA%E9%9D%99%E6%80%81/</guid>
      <description>&lt;p&gt;&lt;code&gt;sudo vim /etc/nginx/conf.d/default.conf&lt;/code&gt;(编辑其他配置文件也可)&lt;/p&gt;
&lt;p&gt;在server{}里面再添加一个location区块,或在index 设置行的下面添加一行&lt;code&gt;include laravel.conf;&lt;/code&gt;(linuxeye一键包的方式)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;location / {
  try_files $uri $uri/ /index.php?$query_string;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>配置Nginx处理PHP请求</title>
      <link>https://huifeng.me/posts/06-%E9%85%8D%E7%BD%AEnginx%E5%A4%84%E7%90%86php%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Mon, 10 Aug 2015 20:36:34 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/06-%E9%85%8D%E7%BD%AEnginx%E5%A4%84%E7%90%86php%E8%AF%B7%E6%B1%82/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;运行&lt;code&gt;less /etc/php-fpm.conf&lt;/code&gt;查看配置,&lt;code&gt;include=/etc/php-fpm.d/*.conf&lt;/code&gt;一行说明只要在这个目录下的&lt;code&gt;conf&lt;/code&gt;类型的文件都会被包含到配置里.该目录下会有一个www.conf的文件,为默认配置文件.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;listen = 127.0.0.1:9000&lt;/code&gt;表示监听地址,如果有请求是PHP脚本就发送到这个地址,可以理解为PHP脚本是通过该地址的服务来解析的.可以是IP地址加端口号,也可以用socket的方式,socket方式更安全些.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修改Nginx的配置文件,在之前已经添加了!文件是:&lt;code&gt;/etc/nginx/conf.d/default.conf&lt;/code&gt;,通过vi编辑器继续修改,添加nginx对php类文件的解析设置:&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>配置Nginx虚拟主机</title>
      <link>https://huifeng.me/posts/05-%E9%85%8D%E7%BD%AEnginx%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/</link>
      <pubDate>Mon, 10 Aug 2015 20:34:37 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/05-%E9%85%8D%E7%BD%AEnginx%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/</guid>
      <description>&lt;h2 id=&#34;完全diy配置的情况&#34;&gt;完全DIY配置的情况&lt;/h2&gt;
&lt;p&gt;默认情况下是安装在&lt;code&gt;/etc/nginx&lt;/code&gt;目录下的:&lt;code&gt;nginx.conf&lt;/code&gt;是主配置文件,里面有一个&lt;strong&gt;server&lt;/strong&gt;区块是默认的,刚安装好打开的默认页面就是这里所设定的.&lt;code&gt;include /etc/nginx/conf.d/*.conf;&lt;/code&gt;一行就是将所有conf.d目录下的所有.conf的配置文件全部加载进来,这样的话,我们要配置新的虚拟目录只需要将在该目录下添加.conf的配置文件即可,不同的站点可以是不同的配置文件.可以先配置一个模板型conf文件,比如我们可以先把自带的default.conf文件配置下:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>安装Web服务器：Nginx</title>
      <link>https://huifeng.me/posts/04-%E5%AE%89%E8%A3%85web%E6%9C%8D%E5%8A%A1%E5%99%A8nginx/</link>
      <pubDate>Mon, 10 Aug 2015 20:32:33 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/04-%E5%AE%89%E8%A3%85web%E6%9C%8D%E5%8A%A1%E5%99%A8nginx/</guid>
      <description>这个简单，直接上命令： sudo yum install -y nginx 启动服务：sudo systemctl start nginx 检查服务：systemctl status nginx 设为启动项：sudo systemctl enable nginx</description>
    </item>
    
    <item>
      <title>安装PHP与常用扩展</title>
      <link>https://huifeng.me/posts/03-%E5%AE%89%E8%A3%85php%E4%B8%8E%E5%B8%B8%E7%94%A8%E6%89%A9%E5%B1%95/</link>
      <pubDate>Mon, 10 Aug 2015 19:44:06 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/03-%E5%AE%89%E8%A3%85php%E4%B8%8E%E5%B8%B8%E7%94%A8%E6%89%A9%E5%B1%95/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;yum search php | grep fpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以找到一行是&lt;code&gt;php56u-fpm.x86_64&lt;/code&gt;,就安装这个：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sudo yum install -y php56u-fpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>安装数据库管理系统MariaDB(MySQL)</title>
      <link>https://huifeng.me/posts/02-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9Fmariadb-or-mysql/</link>
      <pubDate>Mon, 10 Aug 2015 19:40:49 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/02-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9Fmariadb-or-mysql/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Maria数据库具体可以搜索看，完全可以替代了MySQL数据库，推荐使用MySQL原作者以自己女儿命名的开源数据库Maria，MySQL被Oracle收下了。恩恩。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意,能运行下面的命令,前提是你已经成功添加了资源仓库,并且是CentOS 7.X,如果是6.X,建议直接跳到最后一项.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>添加资源仓库</title>
      <link>https://huifeng.me/posts/01-%E6%B7%BB%E5%8A%A0%E8%B5%84%E6%BA%90%E4%BB%93%E5%BA%93/</link>
      <pubDate>Mon, 10 Aug 2015 19:35:36 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/01-%E6%B7%BB%E5%8A%A0%E8%B5%84%E6%BA%90%E4%BB%93%E5%BA%93/</guid>
      <description>&lt;p&gt;由于centos自带的资源仓库里资源的版本不够新,所以我们选择添加两个资源仓库.&lt;/p&gt;
&lt;p&gt;虚拟机从  &lt;a href=&#34;https://github.com/chef/bento&#34;&gt;https://github.com/chef/bento&lt;/a&gt;  找,安装好后,进行下面的步骤:&lt;/p&gt;
&lt;p&gt;这里我安装了centos7.1版本&lt;/p&gt;
&lt;p&gt;下面开始:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 系统常用命令</title>
      <link>https://huifeng.me/posts/linux-common-commands/</link>
      <pubDate>Mon, 10 Aug 2015 19:21:30 +0800</pubDate>
      
      <guid>https://huifeng.me/posts/linux-common-commands/</guid>
      <description>&lt;h2 id=&#34;常用指令&#34;&gt;常用指令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ls　　        显示文件或目录
&lt;ul&gt;
&lt;li&gt;-l          列出文件详细信息l(list)&lt;/li&gt;
&lt;li&gt;-a         列出当前目录下所有文件及目录，包括隐藏的a(all)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mkdir         创建目录
&lt;ul&gt;
&lt;li&gt;-p         创建目录，若无父目录，则创建p(parent)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cd             切换目录&lt;/li&gt;
&lt;li&gt;touch        创建空文件&lt;/li&gt;
&lt;li&gt;echo          创建带有内容的文件。&lt;/li&gt;
&lt;li&gt;cat            查看文件内容&lt;/li&gt;
&lt;li&gt;cp             拷贝&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>