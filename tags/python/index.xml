<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> python on 回风舞雪</title>
    <link>https://wedojava.github.io/tags/python/</link>
    <description>Recent content in  python on 回风舞雪</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 26 Jul 2019 11:50:00 +0800</lastBuildDate>
    
	<atom:link href="https://wedojava.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Binary I/O operation</title>
      <link>https://wedojava.github.io/posts/binary-io-operation/</link>
      <pubDate>Fri, 26 Jul 2019 11:50:00 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/binary-io-operation/</guid>
      <description>I coped with character type coversion to let it looks like c type, and search bytes from *.dll to modify it. so, there is sth I learned and written down here.
# Binary I/O operation Define!
def hex_read(filepath: str) -&amp;gt; bytearray: if os.path.isfile(filepath): with open(filepath, &amp;#39;rb&amp;#39;) as f: data = bytearray(f.read()) return data Usage:
dll_data = hex_read(&amp;#39;D:\\test\\test.dll&amp;#39;) Find bytes and replace it:
index_start = dll_data.find(b&amp;#39;\x85\x69\xf0\x7f&amp;#39;) index_end = index_start + 100 if index_start != -1: data_old = dll_data[index_start:index_end] data_new = replacebytes # replacebytes is the content you want to replace dll_data_new = dll_data.replace(data_old, data_new) with open(&amp;#39;D:\\test\\test.dll&amp;#39;, &amp;#39;wb&amp;#39;) as f: f.write(dll_data_new) </description>
    </item>
    
    <item>
      <title>Hex byte string int coversion</title>
      <link>https://wedojava.github.io/posts/hex-b-str-int-switch-in-python/</link>
      <pubDate>Fri, 26 Jul 2019 09:56:00 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/hex-b-str-int-switch-in-python/</guid>
      <description>Reference:
 https://docs.python.org/zh-cn/3/library/stdtypes.html https://docs.python.org/zh-cn/3/library/struct.html   # Python Types Coversion hey, there are some usefull features below, I will update at intervals:
bit_length() New in version 3.1:
In [73]: n = -37 In [74]: bin(n) Out[74]: &#39;-0b100101&#39; In [75]: n.bit_length() Out[75]: 6  hex to int:
In [59]: int(&#39;0x22357&#39;, 16) Out[59]: 140119  int to hex:
In [32]: hex(141128) Out[32]: &#39;0x22748&#39;  packed binary data to int:
In [70]: struct.unpack(&amp;quot;I&amp;quot;, b&#39;\x57\x23\x02\x00&#39;) Out[70]: (140119,) In [71]: type(struct.unpack(&amp;quot;I&amp;quot;, b&#39;\x57\x23\x02\x00&#39;)) Out[71]: tuple In [72]: struct.unpack(&amp;quot;I&amp;quot;, b&#39;\x57\x23\x02\x00&#39;)[0] Out[72]: 140119   what is param &amp;ldquo;I&amp;rdquo;? Read More about struct  int to packed binary data:</description>
    </item>
    
    <item>
      <title>Deploy Hexo to VPS By Caddy And Webhooks(Python)</title>
      <link>https://wedojava.github.io/posts/deploy-hexo-to-vps-by-caddy-and-webhooks/</link>
      <pubDate>Thu, 11 Jul 2019 12:00:00 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/deploy-hexo-to-vps-by-caddy-and-webhooks/</guid>
      <description>&lt;p&gt;There are steps to make Hexo works well with caddy, github webhooks and service script write by python3.&lt;/p&gt;
&lt;p&gt;Why not nginx, because I know well about it, I think, and now I want to try caddy.&lt;/p&gt;
&lt;p&gt;Why not git to deploy it？ &lt;a href=&#34;https://huifeng.me/2015/08/16/deploy-hexo-to-vps/&#34;&gt;This is the way to use git for deployment&lt;/a&gt;. But it was outdated or I think, use webhooks and caddy maybe the pop and better way than that.&lt;/p&gt;
&lt;p&gt;This is not as common use for webhooks, the main idear for easy to write hexo blog is follow:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One github&amp;rsquo;s repository cloned at your local system: Only write your md files at there.
Two folders at VPS to clone your md files and generate by hexo for deploy.&lt;/p&gt;
&lt;p&gt;Advantage:
Write blog so easy, just write down and push to github.
Generate at server, so you never need install hexo to your local system, so you can write and push anywhere have git installed
Generate at server, so it will stable and faster than local.&lt;/p&gt;
&lt;p&gt;Disadvantage:
Many settings and preparations at VPS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My System environment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Local: Windows 10&lt;/li&gt;
&lt;li&gt;VPS: Ubuntu 18.04 LTS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;OK, let&amp;rsquo;s GO!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Outline:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Preparation for your host: git&lt;/li&gt;
&lt;li&gt;Preparation for your VPS: git, Node.js, Hexo, webhook scripts&lt;/li&gt;
&lt;li&gt;Install and config Caddy to your VPS&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Install pip to Ubuntu 18.04</title>
      <link>https://wedojava.github.io/posts/install-pip-2-ubuntu-18/</link>
      <pubDate>Thu, 11 Oct 2018 23:17:53 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/install-pip-2-ubuntu-18/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考文档:
&lt;a href=&#34;https://www.linuxidc.com/Linux/2018-05/152390.htm&#34;&gt;https://www.linuxidc.com/Linux/2018-05/152390.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文只讲重点!&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>