<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> php on 回风舞雪</title>
    <link>https://wedojava.github.io/tags/php/</link>
    <description>Recent content in  php on 回风舞雪</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 16 Jan 2019 10:47:39 +0800</lastBuildDate>
    
	<atom:link href="https://wedojava.github.io/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Install nginx php7 and config firewalld in CentOS 7.6</title>
      <link>https://wedojava.github.io/posts/install-nginx-php7-and-config-firewalld-in-centos-7.6/</link>
      <pubDate>Wed, 16 Jan 2019 10:47:39 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/install-nginx-php7-and-config-firewalld-in-centos-7.6/</guid>
      <description>&lt;h1 id=&#34;1-服务器环境&#34;&gt;1. 服务器环境&lt;/h1&gt;
&lt;p&gt;系统：CentOS 7.6
防火墙：firewalld&lt;/p&gt;
&lt;h2 id=&#34;11-防火墙配置&#34;&gt;1.1. 防火墙配置&lt;/h2&gt;
&lt;p&gt;此防火墙为 CentOS 7.6 自带自启动，默认没有任何通路出去，你只能从外面ping的通，ssh连接，其他什么也做不了。&lt;/p&gt;
&lt;p&gt;下面我们开放两个端口，一个是 &lt;code&gt;80/TCP&lt;/code&gt; ，一个是自定义的ssh连接端口 &lt;code&gt;123/TCP&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ firewall-cmd --permanent --add-port=80/tcp
$ firewall-cmd --permanent --add-port=123/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;firewall-cmd：是Linux提供的操作firewall的一个工具;&lt;/li&gt;
&lt;li&gt;&amp;ndash;permanent：表示设置为持久;&lt;/li&gt;
&lt;li&gt;&amp;ndash;add-port：标识添加的端口;&lt;/li&gt;
&lt;li&gt;&amp;ndash;zone=public:指定的zone为public(不加此参数默认都是添加到这里).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;默认的，通过命令行添加的规则会添加到文件： &lt;code&gt;/etc/firewalld/zones/public.xml&lt;/code&gt; .&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Install Redis Cache on Ubuntu Server with PHP 7 and ownCloud</title>
      <link>https://wedojava.github.io/posts/install-redis-cache-on-ubuntu-server-with-php-7-and-owncloud/</link>
      <pubDate>Wed, 08 Jun 2016 17:30:33 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/install-redis-cache-on-ubuntu-server-with-php-7-and-owncloud/</guid>
      <description>参考: https://www.techandme.se/install-redis-cache-on-ubuntu-server-with-php-7-and-owncloud/ 缓存,owncloud推荐使用的是 APCu 和 Redis,we with PHP 7 needed to build the PHP module as well, because PECL install didn’t work on PHP 7 yet. And as usual – as we didn’t find any good straight forward guide, here is one that works, enjoy! 原文说的已经很清楚了,细心点应该不会出错,我这里只记录</description>
    </item>
    
    <item>
      <title>LAMP环境搭建(Ubuntu14.04 For OwnCloud)</title>
      <link>https://wedojava.github.io/posts/lamp-stepbystep/</link>
      <pubDate>Thu, 19 May 2016 12:23:57 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/lamp-stepbystep/</guid>
      <description>&lt;p&gt;本日志主要记录我配置OwnCloud环境的过程,注意,针对OwnCloud,至于某些模块开启和关闭问题,可以根据具体情况自行调整.另外我操作的系统是Ubuntu14.04LTS.
这里推荐一个很不错的文档位置:https://www.linode.com/docs/&lt;/p&gt;
&lt;p&gt;感悟:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遇坑过坑,佛挡杀佛.&lt;/li&gt;
&lt;li&gt;看文档很重要,当然,能去官方的GitHub看看更好.&lt;/li&gt;
&lt;li&gt;最大坑解决过程: OwnCloud文档 -&amp;gt; MySQL文档 -&amp;gt; MariaDB文档 -&amp;gt; Google -&amp;gt; MySQL/MariaDB文档 -&amp;gt; Github/owncloud/core -&amp;gt; issue -&amp;gt;search for my ailling key-&amp;gt; get it!!&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>LEMP/LNMP　环境搭建(Nginx1.10 &#43; PHP7)</title>
      <link>https://wedojava.github.io/posts/lemp-step-to-step/</link>
      <pubDate>Wed, 18 May 2016 18:38:05 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/lemp-step-to-step/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;更多文档请浏览官方文档和Wiki，这个很重要，其实文档里已经说的很清楚了，会遇到的Bug往往在回复里也有。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>AlwaysForgottenTickets</title>
      <link>https://wedojava.github.io/posts/alwaysforgottentickets/</link>
      <pubDate>Fri, 21 Aug 2015 17:01:42 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/alwaysforgottentickets/</guid>
      <description>&lt;h3 id=&#34;记录下平时常用又不止一次忘记的&#34;&gt;记录下平时常用又不止一次忘记的&amp;hellip;&amp;hellip;&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>PHP编码规范-学习笔记</title>
      <link>https://wedojava.github.io/posts/php%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 11 Aug 2015 23:52:03 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/php%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;p&gt;PHP标准组 提出并发布了一系列的风格建议。其中有部分是关于代码风格的，即 PSR-0, PSR-1, PSR-2 和 PSR-4。这些推荐只是一些被其他项目所遵循的规则，如 Drupal, Zend, Symfony, CakePHP, phpBB, AWS SDK, FuelPHP, Lithium 等。你可以把这些规则用在自己的项目中，或者继续使用自己的风格。通常情况下，你应该遵循一个已知的标准来编写 PHP 代码。可能是 PSR 的组合或者是 PEAR 或 Zend 编码准则中的一个。这代表其他开发者能够方便的阅读和使用你的代码，并且使用这些组件的应用程序可以和其他第三方的组件保持一致。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>&#39;问题:能解析html但不能解析php&#39;</title>
      <link>https://wedojava.github.io/posts/%E9%97%AE%E9%A2%98-%E8%83%BD%E8%A7%A3%E6%9E%90html%E4%BD%86%E4%B8%8D%E8%83%BD%E8%A7%A3%E6%9E%90php/</link>
      <pubDate>Mon, 10 Aug 2015 20:46:02 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/%E9%97%AE%E9%A2%98-%E8%83%BD%E8%A7%A3%E6%9E%90html%E4%BD%86%E4%B8%8D%E8%83%BD%E8%A7%A3%E6%9E%90php/</guid>
      <description>&lt;p&gt;这种情况一般是因为权限问题导致的,最开始遇到这种情是用linuxeye的一键遇到的,共享出来和本地映射的文件夹里的php代码不能被解析,在虚拟机里查看文件夹环境,发现都是www的用户和用户组,但是怎么改都改不过来,在宿主机上怎么改owner也是徒劳,怎么办呢?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>常识不常识</title>
      <link>https://wedojava.github.io/posts/%E5%B8%B8%E8%AF%86%E4%B8%8D%E5%B8%B8%E8%AF%86/</link>
      <pubDate>Mon, 10 Aug 2015 20:41:25 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/%E5%B8%B8%E8%AF%86%E4%B8%8D%E5%B8%B8%E8%AF%86/</guid>
      <description>&lt;h2 id=&#34;session目录的权限&#34;&gt;Session目录的权限&lt;/h2&gt;
&lt;p&gt;php.ini文件里一般会定义session文件的路径,但是php-fpm配置文件会覆盖php.ini里的配置.&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/etc/php-fpm.d/www.conf&lt;/code&gt;文件中,一般在底部会有&lt;code&gt;session.save_path&lt;/code&gt;,这里就是session文件的保存位置了&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>配置Nginx处理PHP请求</title>
      <link>https://wedojava.github.io/posts/06-%E9%85%8D%E7%BD%AEnginx%E5%A4%84%E7%90%86php%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Mon, 10 Aug 2015 20:36:34 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/06-%E9%85%8D%E7%BD%AEnginx%E5%A4%84%E7%90%86php%E8%AF%B7%E6%B1%82/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;运行&lt;code&gt;less /etc/php-fpm.conf&lt;/code&gt;查看配置,&lt;code&gt;include=/etc/php-fpm.d/*.conf&lt;/code&gt;一行说明只要在这个目录下的&lt;code&gt;conf&lt;/code&gt;类型的文件都会被包含到配置里.该目录下会有一个www.conf的文件,为默认配置文件.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;listen = 127.0.0.1:9000&lt;/code&gt;表示监听地址,如果有请求是PHP脚本就发送到这个地址,可以理解为PHP脚本是通过该地址的服务来解析的.可以是IP地址加端口号,也可以用socket的方式,socket方式更安全些.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修改Nginx的配置文件,在之前已经添加了!文件是:&lt;code&gt;/etc/nginx/conf.d/default.conf&lt;/code&gt;,通过vi编辑器继续修改,添加nginx对php类文件的解析设置:&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>安装PHP与常用扩展</title>
      <link>https://wedojava.github.io/posts/03-%E5%AE%89%E8%A3%85php%E4%B8%8E%E5%B8%B8%E7%94%A8%E6%89%A9%E5%B1%95/</link>
      <pubDate>Mon, 10 Aug 2015 19:44:06 +0800</pubDate>
      
      <guid>https://wedojava.github.io/posts/03-%E5%AE%89%E8%A3%85php%E4%B8%8E%E5%B8%B8%E7%94%A8%E6%89%A9%E5%B1%95/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;yum search php | grep fpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以找到一行是&lt;code&gt;php56u-fpm.x86_64&lt;/code&gt;,就安装这个：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sudo yum install -y php56u-fpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>